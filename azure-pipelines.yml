stages:
  - stage: Build
    displayName: Build Source Code
    pool:
      vmImage: "ubuntu-latest"
    jobs:
      - job: Compile
        steps:
          - task: SonarCloudPrepare@1
            inputs:
              SonarCloud: 'Sonar Cloud (TDTree)'
              organization: 'nickrobison-github'
              scannerMode: 'Other'
          - task: Gradle@2
            inputs:
              gradleOptions: '-Xmx3072m'
              javaHomeOption: 'JDKVersion'
              jdkVersionOption: '1.11'
              tasks: 'build jacocoTestReport'
              sonarQubeRunAnalysis: true
              sqGradlePluginVersionChoice: 'build'
              jdkArchitectureOption: 'x64'
              publishJUnitResults: true
              testResultsFiles: '**/test-results/test/TEST-*.xml'
          - task: SonarCloudPublish@1
            inputs:
              pollingTimeoutSec: '300'
          - task: CopyFiles@2
            inputs:
              contents: "tdtree/**"
              targetFolder: $(Build.ArtifactStagingDirectory)
          - publish: $(Build.ArtifactStagingDirectory)
            artifact: artifacts
  - stage: Test
    displayName: Run Cross-Platform Tests
    pool:
      vmImage: $(imageName)
    jobs:
      - job: Test
        strategy:
          matrix:
            Mac_Java11:
              jdk: '1.11'
              imageName: 'macos-10.14'
            Windows_Java11:
              imageName: 'vs2017-win2016'
              jdk: '1.11'
            Mac_Java14:
              jdk: '1.14'
              imageName: 'macos-10.14'
            Windows_Java14:
              imageName: 'vs2017-win2016'
              jdk: '1.14'
        steps:
          - download: current
            artifact: artifacts
          - task: CopyFiles@2
            inputs:
              sourceFolder: $(Pipeline.Workspace)/artifacts
              targetFolder: $(Build.SourcesDirectory)
          - task: Gradle@2
            inputs:
              gradleOptions: '-Xmx3072m'
              javaHomeOption: 'JDKVersion'
              jdkVersionOption: '$(jdk)'
              tasks: 'build'
              jdkArchitectureOption: 'x64'
              publishJUnitResults: true
              testResultsFiles: '**/test-results/test/TEST-*.xml'
#  - stage: Deploy
#    displayName: Deploy to Maven
#    dependsOn: Test
#    pool:
#      vmImage: "ubuntu-latest"
#    condition: eq(variables['Build.SourceBranch'], 'refs/heads/master')
#    variables:
#      - group: deploy-variables
#    jobs:
#      - job: Deploy
#        steps:
#          - download: current
#            artifact: artifacts
#          - task: CopyFiles@2
#            inputs:
#              sourceFolder: $(Pipeline.Workspace)/artifacts
#              targetFolder: $(Build.SourcesDirectory)
#          - task: Gradle@2
#            inputs:
#              gradleOptions: '-Xmx3072m'
#              javaHomeOption: 'JDKVersion'
#              jdkVersionOption: '1.11'
#              tasks: 'publish'
#              jdkArchitectureOption: 'x64'



